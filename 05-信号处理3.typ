#import "lib/lib.typ": *
#show: chapter-style.with(
  title: "信号处理3",
  info: info,
)

= 频谱信号分析

== Fourier 变换

Fourier 变换可以将信号从时域变换到频域。对如下真实声音的信号

$
  "signal" = "offset" + ∑_(i = 0)^2 a_i * sin(ω_i * t) + "noise"
$

@sound 中的左图显示了声波的压力随时间的变化。放大（中）我们可以看到一些重复的模式，但仍然不清楚发生了什么。然而，查看相同的数据作为频率的函数（右）可以得到更简单的图像：作为频率函数的信号的简单、规则的结构表明该信号可能是来自弦乐器的声音，其频率内容通常由基频的倍数组成。在这个例子中，采集者敲击了钢琴上的一个琴键，产生了 440 Hz 的音调。

#figure(
  image("images/spectral-sound.png", width: 40%),
  caption: "声音频谱信号",
) <sound>\

Fourier 变换提供了将一种视图（此处为时间函数的数据）转换为另一种视图（此处为频率函数的数据）的最简单方法。实际上，Fourier 变换可用于任何使用正弦信号的物理科学领域。

Fourier 变换的基本思想是：对有限离散信号，每个数字记录的信号都可以表示为纯振荡的加权和，其中每个振荡的幅度和相位经过适当调整。当正弦波的正确组合全部加在一起时，最终结果与感兴趣的函数相同。每次振荡所需的频率、幅度和相位可以通过 Fourier 变换找到。在实践中，少量的频率通常足以表征原始信号的主要特征。

== Fourier 积分

为了将连续函数从时域变换到频域，可以使用 Fourier 积分。常见的约定是用小写变量表示时间函数，用大写变量表示频率函数

$
  X(f) = ∫_(-∞)^∞ x(t) e^(-j 2π f t) dd(t)
$

其中，$f$代表频率。逆变换由下式给出

$
  x(t) = ∫_(-∞)^∞ X(k) e^(j 2π f t) dd(f)
$

Fourier 变换$X(f)$是一个复数，有一个简单直观的解释：其幅度是相应频率$f$的幅度（amplitude），其相位是相应频率的相移（shift）。

#tip[
  有些作者选择用角频率$ω = 2π f$来定义 Fourier 变换（及其逆变换）。在这种情况下，需要一个总计为$1 / 2π$的缩放因子。$1 / 2π$可以缩放正向变换或逆变换，或者$1 / sqrt(2π)$可以缩放两者（对称 Fourier 变换）。
]

=== 复数表示法

振荡可以用三种不同但等效的方式来表达：

- $"osc"(t) = (r * e^(j ϕ)) * e^(j 2π f t)$
- $"osc"(t) = r * sin(2π f t + ϕ)$
- $"osc"(t) = a * cos(2π f t) + b * sin(2π f t)$\

由 Euler 公式

$
  e^(j ω t) = cos(ω t) + j sin(ω t)
$

可得

$
  e^(j 2π f t) = cos(2π f t) + j sin(2π f t)
$\

由此可知，正弦波和余弦波可以用$e^(j 2π f t)$和$e^(-j 2π f t)$来表示

$
  cos(2π f t) &= frac(1, 2)(e^(j 2π f t) + e^(-j 2π f t)) \
  sin(2π f t) &= frac(1, 2 j)(e^(j 2π f t) - e^(-j 2π f t))
$

又由

$
  (r * e^(j ϕ)) * e^(j 2π f t) = r * e^(j(2π f t + ϕ))
$

$e^(j 2π f t)$与复数的乘积对应于振荡的缩放和相移。这里需要的三角函数的最后一个数学性质是：

频率为$k$的正弦波和余弦波的任何组合都是具有该频率的正弦波。振荡的幅度和相位取决于正弦和余弦贡献的相对分量。具体来说，即

$
  a * cos(2π f t) + b * sin(2π f t) = c * sin(2π f t + ϕ)
$

其中，$c = sqrt(a^2 + b^2)$ ，且$ϕ = tan^(−1)(b\/a)$。

由于这些关系，缩放和相移的正弦波可以写成

+ 指数振荡函数与复数相乘
+ 缩放的相移正弦信号
+ 正弦信号与余弦信号之和\

这三种表示法完全等价。由于指数表示法最紧凑，下文首选使用它。

=== 冲击响应

对常数函数$x(t) = 1$，其 Fourier 变换为

$
  X(f) = ∫_(-∞)^∞ e^(-j 2π f t) dd(t)
$

这个积分是以$0$为中心的 Dirac δ 函数：

$
  X(f) = δ(0)
$

#tip[
  Dirac δ 函数是一个无限窄的单峰函数，其高度使得峰上的积分恰好为$1$，而其他位置的积分为$0$。可将其视为$t=0$时的脉冲。
]

== Fourier 级数

实际测量信号永远不会是无限的。它们总是有开始和结束。使用 Fourier 级数，可将这样的信号变成“周期性的”无限信号。Fourier 级数表明，每个周期函数都可以分解为频率为基频倍数的正弦波的总和：

$
  x(t) = a_0 + ∑_(n = 1)^∞ [a_n * cos(2π n f_p t) + b_n * sin(2π n f_p t)]
$

基频$f_p$由下式确定：

$
  f_p = 1 / T_P
$

其中，$T_P$是数据集的持续时间，即一个“周期”的持续时间。同样，Fourier 级数可以用更简洁的复数符号表示

$
  x(t) = ∑_(n = -∞)^∞ X_n * e^(j 2π n f_p t) = ∑_(n = -∞)^∞ X_n * e^(j 2π n frac(t, T_P))
$

其中，$X_n$的值由下式给出

$
  X_n = frac(1, T_P) ∫_τ^(τ + T_P) x(t) * e^(-j 2π n frac(t, T_P)) d t
$

== 改进变换

=== 离散 Fourier 变换

实际上，当处理从连续变化信号中采样的数据的数字表示时，数据集不仅受时间限制，而且是离散的。对这样的数据集，只需要有限数量的正弦波来表示信号。具体来说，对$N$个离散数据点，只需要$N$个正弦波来组成信号。

若以恒定采样频率对$N$个数据点进行采样，则可以通过以下方式获得 Fourier 系数$F_n$：

$
  X_n = ∑_(τ = 0)^(N - 1) x_τ * e^(-j 2π frac(n⋅τ, N)) quad "with" n = 0, ⋯, N - 1
$ <four>

逆 Fourier 变换由下式给出

$
  x_τ = frac(1, N) ∑_(n = 0)^(N - 1) X_n * e^(j 2π frac(n⋅τ, N)) quad "with" τ = 0, ⋯, N - 1
$ <four_inv>

由于这些方程包含有限数量的离散数据点@four 和有限数量的离散波@four_inv，因此这种变换被称为离散 Fourier 变换（Discrete Fourier Transform，DFT）。

由@four_inv，且 DFT 中的指数在频率上是周期性的，则有

$
  e^(2π j frac(-n ⋅ τ, N)) = e^(2π j frac(-n ⋅ τ, N)) * 1 = e^(2π j frac(-n ⋅ τ, N)) * e^(2π j frac(N ⋅ τ, N)) = e^(2π j frac((-n + N) ⋅ τ, N))
$

=== 快速 Fourier 变换

DFT 之所以成为数值计算的支柱，部分原因在于它拥有一种非常快速的计算算法，即“快速 Fourier 变换（Fast Fourier Transform，FFT）”。若数据点的数量恰好为$N = 2n$，则所需的乘法次数可以减少许多个数量级，尤其是对长信号而言。

由于离散 Fourier 变换将其输入分离为在离散频率上起作用的分量，因此它在数字信号处理中具有广泛的应用，例如用于滤波。在这种情况下，变换的离散输入通常称为信号，存在于时域中。输出称为频谱或变换，存在于频域中。

为了利用 FFT 的速度优势，包含少于$2n$个数据点的信号通常会用零填充，即用$0$扩展，直到其长度与$2$的下一个幂匹配。时间域中的零填充在实践中也被广泛使用，通过对零填充信号进行 DFT 来计算大量插值的频谱。

=== 实值信号

测量信号始终由实值数据组成，因此构成了 Fourier 变换的最常见输入。对此类信号，频谱的幅度表现出令人惊讶的对称性：最后一个 Fourier 系数是第二个系数的复共轭，倒数第二个系数是第三个系数的复共轭，等等。

其背后的原因是，对实值信号，以下方程必须成立

$
  X(f) = X(−f)^∗
$ <real>

其中，$*$表示复共轭。换句话说，对实值信号，Fourier 变换需要包含相同幅度的正负频率分量，以便两者的虚部贡献可以抵消。

若有$N$个数据点，采样周期为$T_s$，则第$n$个频率（单位为 [Hz]）由下式给出

$
  f_n = frac(n, N⋅T_s), 0 ≤ n ≤ N - 1
$

- 第一个 Fourier 分量对应于$e^(j 0) = 1$，因此与信号的偏移量成比例。
- 最低振荡频率为$1 / (N · T_s)$[Hz]，即$1 / ctext("信号持续时间")$。
- 对实值数据，最高独立频率是采样频率的一半，即$1 / (2T_s)$（Nyquist-Shannon 定理）。
- 对实值数据， Fourier 系数的上半部分必须是下半部分的复共轭。\

高于 Nyquist 频率的频率可以解释为负频率。由于对实值信号，负频率分量是相应正频率的复共轭（@real），因此可以忽略这些分量，因为它们不包含任何附加信息。这称为单边频谱（single-sided spectrum），如 @sound。

=== Fourier 系数的解释

如@sample 所示：作为时间的函数（左图），信号看起来相当随机。但从频率内容（右图）来看，情况非常清楚：只有很少的频率分量对信号有贡献。

#figure(
  image("images/spectral-sample.png", width: 40%),
  caption: "频谱信号分析示例",
) <sample>\

@sample 的右侧子图显示了上述模拟噪声正弦波的频谱（即 Fourier 系数的幅度）（持续时间=1 分钟，采样率=100 Hz）。

= 谱密度估计

对于许多应用来说，Fourier 系数的相位并不是很重要，主要目标是获得信号频谱密度的估计值，也称为功率谱（power spectrum）。该频谱密度表征信号的频率内容。

根据应用的不同，可以使用不同的方法来查找功率谱。它们可以分为非参数和参数谱密度估计技术。

- 最常见的非参数技术是
  - 周期图：DFT 的模平方
  - Welch 方法：使用时间平均的周期图的窗口版本
- 参数技术包括自回归模型（autoregressive model，AR）、移动平均模型（moving-average model，MA）和自回归移动平均（autoregressive moving average，ARMA）模型。

== 周期图

将 FFT 应用于时间相关信号可返回复数 Fourier 系数$X_n$。每次振荡贡献的信号“功率”与 Fourier 系数幅度的平方成正比：

$
  P_n = F_n · F_n^∗ = |F_n|^2
$

这被称为信号的周期图或功率谱，因为它描述了功率的分布——与幅度的平方成比例——在组成该信号的各个频率分量上。周期图中的谱密度通常以对数尺度显示，因为这通常可以更好地视图较小但通常很重要的频率贡献（@periodo）。

#figure(
  image("images/spectral-periodo.png", width: 40%),
  caption: "周期图（左为线性标度，右为对数标度）",
) <periodo>\

功率谱的峰值包含对信号的重要频率贡献。信号的噪声部分取决于数值差异以及功率谱计算中使用的“加窗”（windowing）产生的伪影，对信号的形状没有显著贡献。

#figure(
  image("images/spectral-periodo-noise.png", width: 40%),
  caption: "带噪声的周期图",
)

== Welch 周期图

为了降低功率谱中的噪声，可以采用一种称为 Welch 周期图的程序。这样，数据集被分解成多个单独的段，为每个段计算功率谱，然后对得到的功率谱取平均值 (图 9.13)。返回得到的功率信号 (功率谱密度 - PSD)。假设频率分布保持大致恒定，这会增强主要成分并降低随机噪声。代价是降低频率分辨率（@welch）。

#figure(
  image("images/spectral-periodo-welch.png", width: 40%),
  caption: "Welch 周期图降噪",
) <welch>

== Fourier 变换、卷积和互相关

=== 卷积

对于短信号，可以使用@firf 直接有效地计算卷积。

$ y(n) = ∑_(i = 0)^k w_i x(n - i) $ <firf>

但对于较长的信号，通过 Fourier 变换计算会更有效。其基础由卷积定理给出：

$
  F{f ∗ g} = cal(F){f} · cal(F){g}
$ <conv>

其中，$cal(F)$表示 Fourier 变换，$∗$表示卷积，$·$表示点积。通过应用逆 Fourier 变换$cal(F)^(−1)$，可得：

$
  f ∗ g = cal(F)^(−1){cal(F){f} · cal(F){g}}
$

这是一种非常有效的卷积计算方法。例如，对于 2D 图像，基于 FFT 的卷积实现对于大于$8 × 8 - 12 × 12$的内核大小是最有效的，具体取决于实现类型（线性卷积与循环卷积）。

#tip[
  滤波器系数为$𝒃$的 FIR 滤波器的应用相当于与信号$𝒃$的卷积。
]

=== 互相关

由于卷积与互相关密切相关，因此与@conv 有对应关系：

$
  "Corr"(g, h) ↔ G · H^∗
$ <corr>

其中，$g, h$是时间函数，$G, H$是相应的 Fourier 变换，$H^∗$是$H$的复共轭。若$h(t)$是实数，则$H(−f) = H^∗(f)$。

#tip[
  在@corr 中哪个信号被共轭取决于互相关的定义 - 并且使用不同的定义。
]

= 时间相关 Fourier 变换

== 加窗

Fourier 变换计算整个信号的频率内容。但信号的特性通常会随时间而变化。在这种情况下，人们还想知道功率谱如何随时间变化。最简单的方法是每次只取一小段数据并计算相应的功率谱。这种方法称为短时 Fourier 变换（Short Time Fourier Transform，STFT）。

雷达等设备对接收信号都进行了一些形式的采样，而对信号序列（输入序列）$x(n)$的截短不可避免，通常使用乘积来实现。为了减少频谱能量泄漏，可采用不同的截取函数（权重函数）$w(n)$对信号截断，即从 Fourier 变换中获得时间选择性信息，这被称为加窗（windowing）。

- 时域相乘

$ x_w (n) = x(n) * w(n) $

- 频域卷积

$ X_N (e^(j ω)) = 1 / 2 ∫_(-π)^π X (e^(j θ)) W(e^(j (ω - θ))) dd(θ) $\

@window 说明了这一原理。左上子图显示了我们迄今为止一直在使用的声音信号。左下子图显示了选择该声音信号一小段的窗口。右侧子图显示了如何执行加窗：将基础信号与窗口相乘，以获得该窗口中心周围短时间段内的信号。计算该时间段内的频谱密度可提供窗口时间内的功率谱。

#figure(
  image("images/spectral-window.png", width: 40%),
  caption: "加窗",
) <window>

== 窗函数

不同的窗函数产生泄漏的大小不一样，频率分辨能力也不一样。为了不影响截短序列的相位响应，通常需要窗函数保持线性相位。

- 矩形窗
  - 优点：主瓣比较集中
  - 缺点：副瓣较高，并有负副瓣，导致加窗过程中带进了高频干扰和频谱泄漏
- Hanning 窗，又称升余弦窗
  - 使主瓣加宽并降低，副瓣则显著减小，最大副瓣值衰减-31 dB，但是主瓣宽度比矩形窗函数的增加了1倍；
  - 优点：副瓣小，泄漏小于矩形窗
  - 缺点：分析带宽加宽，频率分辨力下降
- Hamming 窗，又称改进的升余弦窗
  - 第一副瓣衰减为-42 dB，但其副瓣衰减速度比 Hanning 窗衰减速度慢\

对于短信号，边缘效应（edge effect）会严重扭曲信号的功率谱，因为我们假设信号是周期性的。使用边缘逐渐变细的窗口可以消除此类边缘伪影，也可用于消除信号中的偏移。@hann 的顶部和中间说明了如何剪切纯周期信号会在功率谱中引入伪影。锥形边缘可最大限度地减少与硬边缘相关的高频振铃伪影，这也称为“频谱泄漏”。@hann 底部使用了 Hanning 窗。虽然矩形窗口提供更好的频率分辨率（中间），但 Hanning 窗表现出的伪影较少。

#figure(
  image("images/spectral-hann.png", width: 40%),
  caption: "Hanning 窗",
) <hann>

== 加窗凝聚

对一维信号，加窗函数会在一个数轴上（Doppler 维或距离维）以预设长度扫描读取信号的幅度数据，并按一定策略取值（最大值或均值）。

对二维信号，加窗函数会在两个维度上进行二维遍历，扫描读取信号的幅度数据，并取值。

= 测角

- 和差波束比幅测角
- 鉴角曲线

#tip[
  正常情况下，和值一定大于差值。
]
